{"version":3,"sources":["constants.js","services/apiConnector.js","views/SubscribeButton.js","views/Friends.js","views/GeoButton.js","views/MapComponent.js","views/Main.js","index.js"],"names":["Constants","SERVER_API_ADDRESS","VK_APP_ID","VK_API_VERSION","ApiConnector","getSubscribers","user_id","a","fetch","mode","method","headers","getUserSubscribers","addSubscriber","friend_id","body","JSON","stringify","id","subscriber","removeSubscriber","getUserLocation","addUserLocation","lat","long","date","Date","toLocaleDateString","SubscribeButton","props","subscribeToggle","state","subscribed","setState","on","text","then","this","onClick","React","Component","Friends","searchChange","e","search","target","value","getFriends","access_token","bridge","send","request_id","params","fields","order","v","friends","subscribers","userSubscribers","user_data","response","json","api","resp","userSubs","data","subs","items","reject","console","log","toUpperCase","filter","friend","first_name","indexOf","last_name","popout","onChange","after","map","key","before","size","src","photo_50","includes","description","style","marginTop","GeoButton","textAlign","MapComponent","getGeo","sendGeoToServer","getGeoDataFromServer","geoLocation","type","features","push","geometry","coordinates","properties","balloonContentHeader","balloonContentBody","balloonContentFooter","toISOString","split","userInfo","user_ids","toString","forEach","user","location","userLocation","height","width","marginLeft","marginRight","center","zoom","controls","modules","options","clusterize","gridSize","objects","openBalloonOnClick","preset","clusters","margin","defaultProps","Main","activeStory","onStoryChange","bind","currentTarget","dataset","story","tabbar","selected","data-story","fill","activePanel","separator","subscribe","detail","schemeAttribute","document","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.24d35372.chunk.js","sourcesContent":["export default class Constants {\r\n    static SERVER_API_ADDRESS = \"https://intown-backend.herokuapp.com/\";\r\n    static VK_APP_ID = 7550756;\r\n    static VK_API_VERSION = \"5.122\";\r\n}\r\n","import Constants from \"../constants\";\r\n\r\nexport default class ApiConnector {\r\n    static getSubscribers = async (user_id) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"user/\" + user_id, {\r\n            mode: \"cors\",\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        });\r\n    }\r\n\r\n    static getUserSubscribers = async (user_id) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"subscribers/\" + user_id, {\r\n            mode: \"cors\",\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        });\r\n    }\r\n\r\n    static addSubscriber = async (user_id, friend_id) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"user/add\", {\r\n            mode: \"cors\",\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                id: user_id,\r\n                subscriber: friend_id,\r\n            })\r\n        });\r\n    }\r\n\r\n    static removeSubscriber = async (user_id, friend_id) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"user/remove\", {\r\n            mode: \"cors\",\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                id: user_id,\r\n                subscriber: friend_id,\r\n            })\r\n        });\r\n    }\r\n\r\n    static getUserLocation = async (user_id) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"location/\" + user_id, {\r\n            mode: \"cors\",\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        });\r\n    }\r\n\r\n    static addUserLocation = async (id, lat, long) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"location/add\", {\r\n            mode: \"cors\",\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id,\r\n                date: new Date().toLocaleDateString(\"en-US\"),\r\n                lat: lat,\r\n                long: long,\r\n            }),\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Div, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport ApiConnector from \"../services/apiConnector\";\r\n\r\nclass SubscribeButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = this.props.subscribed\r\n            ? {on: 'secondary', text: \"Отписаться\", subscribed: true}\r\n            : {on: 'primary', text: \"Подписаться\", subscribed: false};\r\n    }\r\n\r\n    subscribeToggle = () => {\r\n        if (!this.state.subscribed) {\r\n            this.setState({on: 'secondary', text: 'Отписаться', subscribed: true})\r\n            ApiConnector.addSubscriber(this.props.user_id, this.props.friend_id).then();\r\n        } else {\r\n            this.setState({on: 'primary', text: 'Подписаться', subscribed: false})\r\n            ApiConnector.removeSubscriber(this.props.user_id, this.props.friend_id).then();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n                <Div >\r\n                    <Button mode={this.state.on} onClick={this.subscribeToggle}>{this.state.text}</Button>\r\n                </Div>\r\n        )\r\n    }\r\n}\r\nexport default SubscribeButton","import React from 'react';\r\nimport {Group, Header, Avatar, Spinner} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport SubscribeButton from \"./SubscribeButton\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\r\nimport ApiConnector from \"../services/apiConnector\";\r\nimport Constants from \"../constants\";\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\";\r\n\r\nclass Friends extends React.Component {\r\n    searchChange = (e) => {\r\n        this.setState({\r\n            search: e.target.value\r\n        });\r\n    };\r\n\r\n    get friends() {\r\n        const search = this.state.search.toUpperCase();\r\n        return this.state.search !== ''\r\n            ? this.state.friends.filter((friend) => friend.first_name.toUpperCase().indexOf(search) > -1\r\n            || friend.last_name.toUpperCase().indexOf(search) > -1)\r\n            : this.state.friends;\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n          friends: null,\r\n          user_id: null,\r\n          subscribers: null,\r\n          search: '',\r\n          userSubscribers: null,\r\n        };\r\n        bridge.send(\"VKWebAppGetUserInfo\", {}).then((user_data) => {\r\n            ApiConnector.getSubscribers(user_data.id).then((response) => {\r\n                response.json().then((api) => {\r\n                    ApiConnector.getUserSubscribers(user_data.id).then((resp) => {\r\n                        resp.json().then(userSubs => {\r\n                            bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": Constants.VK_APP_ID, \"scope\": \"friends\"})\r\n                                .then(data => {\r\n                                    this.getFriends(data.access_token).then(data => {\r\n                                        this.setState({\r\n                                            user_id: user_data.id,\r\n                                            subscribers: api.subs,\r\n                                            friends: data.response.items,\r\n                                            userSubscribers: userSubs.subs,\r\n                                        });\r\n                                    });\r\n                                });\r\n                        });\r\n                    });\r\n\r\n                });\r\n            }, (reject) => {\r\n                console.log(reject)\r\n            });\r\n        })\r\n    }\r\n\r\n    getFriends = async (access_token) => {\r\n        return await bridge\r\n            .send('VKWebAppCallAPIMethod',\r\n                {method: \"friends.get\", request_id: \"32test\",\r\n                    params: {\r\n                        fields: \"id, photo_50\",\r\n                        order: \"name\",\r\n                        access_token: access_token,\r\n                        v: Constants.VK_API_VERSION,\r\n                    }\r\n                });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Group>\r\n                <Header mode=\"secondary\" popout={this.state.popout}>Список друзей</Header>\r\n                <Search value={this.state.search} onChange={this.searchChange} after={null}/>\r\n                {this.state.friends ? this.friends.map((friend) => {\r\n                    return <SimpleCell\r\n                        key={friend.id}\r\n                        before={<Avatar size={48} src={friend.photo_50}/>}\r\n                        after={<SubscribeButton\r\n                            user_id={this.state.user_id}\r\n                            friend_id={friend.id}\r\n                            subscribed={this.state.subscribers ? this.state.subscribers.includes(friend.id) : false}\r\n                        />}\r\n                        description={(this.state.userSubscribers && this.state.userSubscribers.indexOf(friend.id) > -1) ? \"Ваш подписчик\" : \"\"}\r\n                    >{friend.first_name + ' ' + friend.last_name}</SimpleCell>\r\n                }) : <Spinner size=\"regular\" style={{ marginTop: 20 }}/> }\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default Friends\r\n","import React from 'react';\r\nimport {Div, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nclass GeoButton extends React.Component {\r\n    render () {\r\n        return (\r\n                <Div style={{textAlign: 'center', marginTop: '3%'}}>\r\n                    <Button mode=\"commerce\" size='xl' onClick={this.props.onClick}>Поделиться геопозицией</Button>\r\n                </Div>\r\n        )\r\n    }\r\n}\r\nexport default GeoButton\r\n","import {Group, ScreenSpinner} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport React from 'react';\r\nimport GeoButton from \"./GeoButton\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport ApiConnector from \"../services/apiConnector\";\r\nimport Constants from \"../constants\";\r\nimport {YMaps, Map, Placemark, ObjectManager} from \"react-yandex-maps\";\r\n\r\nclass MapComponent extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            geoLocation: null,\r\n            subscribers: null,\r\n            user_id: null,\r\n        }\r\n        this.getGeoDataFromServer();\r\n    }\r\n\r\n    static defaultProps = {\r\n        center:{\r\n            lat:30,\r\n            long:30\r\n        },\r\n        zoom: 7\r\n    };\r\n\r\n    getGeo = async () =>  {\r\n        return await bridge.send('VKWebAppGetGeodata');\r\n    }\r\n\r\n    sendGeoToServer = async () => {\r\n        await this.getGeo().then(data => {\r\n            ApiConnector.addUserLocation(this.state.user_id, data.lat, data.long);\r\n        });\r\n    }\r\n\r\n    getGeoDataFromServer = async () => {\r\n        await this.getGeo().then((data) => {\r\n            this.setState({\r\n                geoLocation: {\r\n                    lat: data.lat,\r\n                    long: data.long,\r\n                }\r\n            });\r\n        })\r\n        let subscribers = {\r\n            type: \"FeatureCollection\",\r\n            features: [],\r\n        }\r\n        subscribers.features.push({\r\n            type: \"Feature\",\r\n            id: 0,\r\n            geometry: {\r\n                type: \"Point\",\r\n                coordinates: [this.state.geoLocation.lat, this.state.geoLocation.long],\r\n            },\r\n            properties: {\r\n                balloonContentHeader: \"Вы\",\r\n                balloonContentBody: \"Нажмите на кнопку снизу, чтобы поделиться местоположением с друзьями!\",\r\n                balloonContentFooter: new Date().toISOString().split('T')[0],\r\n            }\r\n        });\r\n        await bridge.send('VKWebAppGetUserInfo')\r\n            .then(userInfo => {\r\n                this.setState({ user_id: userInfo.id });\r\n                ApiConnector.getSubscribers(userInfo.id).then((response) => {\r\n                    response.json().then((data) => {\r\n                        bridge.send('VKWebAppGetAuthToken', {\"app_id\": Constants.VK_APP_ID, \"scope\": \"users\"}).then(response => {\r\n                            bridge.send('VKWebAppCallAPIMethod', {\r\n                                method: \"users.get\",\r\n                                request_id: \"64test\",\r\n                                params: {\r\n                                    user_ids: data.subs.toString(),\r\n                                    fields: \"first_name, last_name\",\r\n                                    v: Constants.VK_API_VERSION,\r\n                                    access_token: response.access_token,\r\n                                }\r\n                            }).then((data) => {\r\n                                data.response.forEach(user => {\r\n                                    ApiConnector.getUserLocation(user.id).then((response) => {\r\n                                        response.json().then((location) => {\r\n                                            if (location.date !== \"\") {\r\n                                                const userLocation = {\r\n                                                    type: \"Feature\",\r\n                                                    id: location.id,\r\n                                                    geometry: {\r\n                                                        type: \"Point\",\r\n                                                        coordinates: [location.lat, location.long],\r\n                                                    },\r\n                                                    properties: {\r\n                                                        balloonContentHeader: user.first_name + ' ' + user.last_name,\r\n                                                        balloonContentBody: \"Ваш друг поделился местоположением!\",\r\n                                                        balloonContentFooter: location.date.toString().split('T')[0],\r\n                                                    }\r\n                                                }\r\n                                                subscribers.features.push(userLocation)\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                });\r\n                                this.setState({\r\n                                    subscribers: subscribers\r\n                                });\r\n                            })\r\n                        })\r\n                    })\r\n                });\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (this.state.subscribers)\r\n        ? (\r\n            <Group style={{\r\n                height: '100%', width: '100%',\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\"\r\n            }}>\r\n            <YMaps>\r\n                <Map\r\n                    state={{\r\n                        center: [this.state.geoLocation.lat, this.state.geoLocation.long],\r\n                        zoom: 7,\r\n                        controls: ['zoomControl'],\r\n                    }}\r\n                    modules={['control.ZoomControl']}\r\n                    width={'100%'}\r\n                    height={'70vh'}\r\n                >\r\n                    <ObjectManager\r\n                        options={{\r\n                            clusterize: true,\r\n                            gridSize: 32,\r\n                        }}\r\n                        objects={{\r\n                            openBalloonOnClick: true,\r\n                            preset: 'islands#blueDotIcon',\r\n                        }}\r\n                        clusters={{\r\n                            preset: 'islands#greenClusterIcons',\r\n                        }}\r\n                        features={this.state.subscribers}\r\n                        modules={[\r\n                            'objectManager.addon.objectsBalloon',\r\n                            'objectManager.addon.objectsHint',\r\n                        ]}\r\n                    />\r\n                </Map>\r\n            </YMaps>\r\n            <GeoButton onClick={this.sendGeoToServer}/>\r\n            </Group>\r\n        )\r\n        : (<ScreenSpinner style={{\r\n                            margin: \"75% 0 0 0\",\r\n                          }}\r\n                          size=\"large\" />)\r\n    }\r\n}\r\nexport default MapComponent\r\n","import React from 'react';\r\nimport {Epic, Panel, PanelHeader, Tabbar, TabbarItem, View} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28PlayRectangleStackOutline from '@vkontakte/icons/dist/28/play_rectangle_stack_outline';\r\nimport Icon28LocationOutline from '@vkontakte/icons/dist/28/location_outline';\r\nimport Friends from \"./Friends\";\r\nimport MapComponent from \"./MapComponent\";\r\n\r\nclass Main extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeStory: 'Subs',\r\n        };\r\n\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Subs'}\r\n                        data-story=\"Subs\"\r\n                        text=\"Подписки\"\r\n                    ><Icon28PlayRectangleStackOutline fill='#FF7F50' /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Geo'}\r\n                        data-story=\"Geo\"\r\n                        text=\"Геолокация\"\r\n                    ><Icon28LocationOutline fill='#228B22'/></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"Subs\" activePanel=\"Subs\">\r\n                    <Panel id=\"Subs\">\r\n                        <PanelHeader separator={false}>Подписки</PanelHeader>\r\n                            <Friends/>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"Geo\" activePanel=\"Geo\" >\r\n                    <Panel id=\"Geo\">\r\n                        <PanelHeader separator={false}>Геолокация</PanelHeader>\r\n                            <MapComponent />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\nexport default Main\r\n","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport Main from \"./views/Main\"\r\n\r\nbridge.subscribe((e) => {\r\n  switch (e.detail.type) {\r\n    case 'VKWebAppUpdateConfig':\r\n      let schemeAttribute = document.createAttribute('scheme');\r\n      schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\r\n      document.body.attributes.setNamedItem(schemeAttribute);\r\n      break;\r\n\r\n    default:\r\n      //console.log(e.detail);\r\n  }\r\n});\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\").then();\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}