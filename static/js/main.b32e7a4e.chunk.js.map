{"version":3,"sources":["views/SubscribeButton.js","views/Friends.js","views/GeoButton.js","panels/Marker.js","views/Gmap.js","views/Main.js","index.js"],"names":["SubscribeButton","props","subscribeToggle","state","subscribed","setState","on","text","mode","this","onClick","React","Component","Friends","getFriends","a","bridge","send","method","request_id","params","fields","order","access_token","v","then","data","friends","response","items","console","log","catch","error","map","friend","before","size","src","photo_50","after","description","id","first_name","last_name","GeoButton","style","textAlign","marginTop","divStyle","position","top","left","width","height","backgroundColor","border","borderRadius","userSelect","transform","pStyle","fontSize","Marker","name","Gmap","getGeo","geoLocation","lat","lng","long","FriendsCoordinates","marginLeft","marginRight","bootstrapURLKeys","key","center","zoom","Friend","defaultProps","Main","activeStory","onStoryChange","bind","e","currentTarget","dataset","story","tabbar","selected","data-story","fill","activePanel","separator","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b32e7a4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Div, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nclass SubscribeButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = this.props.subscribed\r\n            ? {on: 'secondary', text: \"Отписаться\", subscribed: true}\r\n            : {on: 'primary', text: \"Подписаться\", subscribed: false};\r\n    }\r\n\r\n    subscribeToggle = () => {\r\n        if (!this.state.subscribed) {\r\n            this.setState({on: 'secondary', text: 'Отписаться', subscribed: true})\r\n        } else {\r\n            this.setState({on: 'primary', text: 'Подписаться', subscribed: false})\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n                <Div >\r\n                    <Button mode={this.state.on} onClick={this.subscribeToggle}>{this.state.text}</Button>\r\n                </Div>\r\n        )\r\n    }\r\n}\r\nexport default SubscribeButton","import React from 'react';\r\nimport {Group, Header, Avatar} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport SubscribeButton from \"./SubscribeButton\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\r\n\r\nclass Friends extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n          access_token: null,\r\n          friends: null\r\n        };\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7550756, \"scope\": \"friends\"})\r\n            .then(data => {\r\n                this.setState({\r\n                    access_token: data.access_token\r\n                })\r\n                this.getFriends()\r\n            });\r\n    }\r\n\r\n    getFriends = async () => {\r\n        await bridge\r\n            .send('VKWebAppCallAPIMethod', {method: \"friends.get\", request_id: \"32test\", params: {\r\n                    fields: \"id, photo_50\", order: \"name\", access_token: this.state.access_token,\r\n                    v: \"5.122\",\r\n                }})\r\n            .then(data => {\r\n                this.setState({\r\n                    friends: data.response.items\r\n                });\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                // Handling an error\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Group>\r\n                <Header mode=\"secondary\">Список друзей</Header>\r\n                {this.state.friends ? this.state.friends.map((friend) => {\r\n                    return <SimpleCell before={<Avatar size={48} src={friend.photo_50}/>} after={<SubscribeButton subscribed={false}/>} description={friend.id}>{friend.first_name + ' ' + friend.last_name}</SimpleCell>\r\n                }) : <SimpleCell>Loading</SimpleCell>}\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default Friends","import React from 'react';\r\nimport {Div, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nclass GeoButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n    render () {\r\n        return (\r\n                <Div style={{textAlign: 'center', marginTop: '3%'}}>\r\n                    <Button mode=\"commerce\" size='xl' onClick={this.props.onClick}>Поделиться геопозицией</Button>\r\n                </Div>\r\n        )\r\n    }\r\n}\r\nexport default GeoButton","import React from 'react';\r\n\r\nconst divStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    width: '15px',\r\n    height: '15px',\r\n    backgroundColor: '#0cb',\r\n    border: '2px solid #fff',\r\n    borderRadius: '40%',\r\n    userSelect: 'none',\r\n    transform: 'translate(-50%, -50%)'\r\n}\r\nconst pStyle = {\r\n    width: '500px',\r\n    transform: 'translate(-10%, 0)',\r\n    fontSize: '15pt'\r\n}\r\n\r\nclass Marker extends React.Component {\r\n    render() {\r\n        return <div style={divStyle}><p style={pStyle} >{this.props.name}</p></div>\r\n    }\r\n}\r\nexport default Marker;","import {Group} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport React from 'react';\r\nimport GeoButton from \"./GeoButton\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from '../panels/Marker'\r\n\r\nclass Gmap extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {geoLocation: null}\r\n    }\r\n    static defaultProps = {\r\n        center:{\r\n            lat:30,\r\n            lng:30\r\n        },\r\n        zoom: 11\r\n    };\r\n    FriendsCoordinates\r\n\r\n    getGeo = async () =>  {\r\n        await bridge.send('VKWebAppGetGeodata')\r\n        .then(data => {\r\n            this.setState({\r\n                geoLocation: {\r\n                    lat:data.lat,\r\n                    lng:data.long,\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    render () {\r\n        if (this.state.geoLocation)\r\n            this.FriendsCoordinates = [\r\n                {name: 'Michael Porotkin', lat: this.state.geoLocation.lat-1 , lng: this.state.geoLocation.lng},\r\n                {name: 'Some One', lat: this.state.geoLocation.lat, lng: this.state.geoLocation.lng+1}\r\n        ];\r\n        return (\r\n            <Group style={{\r\n                height: '65vh', width: '95%',\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\"\r\n            }}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: 'AIzaSyCA-CWX9xnTnxGmzIxkH_WIsGUrdeRI444' }}\r\n                center={this.state.geoLocation ? this.state.geoLocation : this.props.center}\r\n                zoom={this.props.zoom}\r\n            >\r\n                {this.state.geoLocation ? <Marker lat={this.state.geoLocation.lat} lng={this.state.geoLocation.lng} name={'Artem Buslaev'}/>:''}\r\n                {this.FriendsCoordinates ? this.FriendsCoordinates.map((Friend) => {\r\n                    return <Marker lat={Friend.lat} lng={Friend.lng} name={Friend.name}/>}):''}\r\n            </GoogleMapReact>\r\n            <GeoButton onClick={this.getGeo}/>\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default Gmap","import React from 'react';\r\nimport {Epic, Panel, PanelHeader, Tabbar, TabbarItem, View} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28PlayRectangleStackOutline from '@vkontakte/icons/dist/28/play_rectangle_stack_outline';\r\nimport Icon28LocationOutline from '@vkontakte/icons/dist/28/location_outline';\r\nimport Friends from \"./Friends\";\r\nimport Gmap from \"./Gmap\";\r\n\r\nclass Main extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeStory: 'Subs',\r\n            friends: null,\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Subs'}\r\n                        data-story=\"Subs\"\r\n                        text=\"Подписки\"\r\n                    ><Icon28PlayRectangleStackOutline fill='#FF7F50' /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Geo'}\r\n                        data-story=\"Geo\"\r\n                        text=\"Геолокация\"\r\n                    ><Icon28LocationOutline fill='#228B22'/></TabbarItem>\r\n\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"Subs\" activePanel=\"Subs\">\r\n                    <Panel id=\"Subs\">\r\n                        <PanelHeader separator={false}>Подписки</PanelHeader>\r\n                            <Friends/>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"Geo\" activePanel=\"Geo\" >\r\n                    <Panel id=\"Geo\">\r\n                        <PanelHeader separator={false}>Геолокация</PanelHeader>\r\n                        <Gmap />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\nexport default Main","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport Main from \"./views/Main\"\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\").then();\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}