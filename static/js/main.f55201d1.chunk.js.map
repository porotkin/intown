{"version":3,"sources":["constants.js","services/apiConnector.js","views/SubscribeButton.js","views/Friends.js","views/GeoButton.js","panels/Marker.js","views/Gmap.js","views/Main.js","index.js"],"names":["Constants","SERVER_API_ADDRESS","VK_APP_ID","VK_API_VERSION","ApiConnector","getSubscribers","user_id","a","fetch","mode","method","headers","addSubscriber","friend_id","body","JSON","stringify","id","subscriber","removeSubscriber","getUserLocation","addUserLocation","lat","long","date","Date","toLocaleDateString","SubscribeButton","props","subscribeToggle","state","subscribed","setState","on","text","then","this","onClick","React","Component","Friends","searchChange","e","search","target","value","getFriends","access_token","bridge","send","request_id","params","fields","order","v","friends","subscribers","user_data","response","json","api","data","subs","items","reject","console","log","toUpperCase","filter","friend","first_name","indexOf","last_name","popout","onChange","after","map","key","before","size","src","photo_50","includes","description","style","marginTop","GeoButton","textAlign","divStyle","position","top","left","width","height","backgroundColor","border","borderRadius","userSelect","transform","nameStyle","fontSize","dateStyle","Marker","name","Gmap","getGeo","sendGeoToServer","geoLocation","lng","getGeoDataFromServer","userInfo","user_ids","toString","forEach","user","location","userLocation","push","marginLeft","marginRight","bootstrapURLKeys","center","zoom","toISOString","split","defaultProps","Main","activeStory","onStoryChange","bind","currentTarget","dataset","story","tabbar","selected","data-story","fill","activePanel","separator","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f55201d1.chunk.js","sourcesContent":["export default class Constants {\r\n    static SERVER_API_ADDRESS = \"https://39fb8d4d5bb8.ngrok.io/\";\r\n    static VK_APP_ID = 7550756;\r\n    static VK_API_VERSION = \"5.122\";\r\n}\r\n","import Constants from \"../constants\";\r\n\r\nexport default class ApiConnector {\r\n    static getSubscribers = async (user_id) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"user/\" + user_id, {\r\n            mode: \"cors\",\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        });\r\n    }\r\n\r\n    static addSubscriber = async (user_id, friend_id) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"user/add\", {\r\n            mode: \"cors\",\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                id: user_id,\r\n                subscriber: friend_id,\r\n            })\r\n        });\r\n    }\r\n\r\n    static removeSubscriber = async (user_id, friend_id) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"user/remove\", {\r\n            mode: \"cors\",\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                id: user_id,\r\n                subscriber: friend_id,\r\n            })\r\n        });\r\n    }\r\n\r\n    static getUserLocation = async (user_id) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"location/\" + user_id, {\r\n            mode: \"cors\",\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        });\r\n    }\r\n\r\n    static addUserLocation = async (id, lat, long) => {\r\n        return await fetch(Constants.SERVER_API_ADDRESS + \"location/add\", {\r\n            mode: \"cors\",\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id,\r\n                date: new Date().toLocaleDateString(\"en-US\"),\r\n                lat: lat,\r\n                long: long,\r\n            }),\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {Div, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport ApiConnector from \"../services/apiConnector\";\r\n\r\nclass SubscribeButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = this.props.subscribed\r\n            ? {on: 'secondary', text: \"Отписаться\", subscribed: true}\r\n            : {on: 'primary', text: \"Подписаться\", subscribed: false};\r\n    }\r\n\r\n    subscribeToggle = () => {\r\n        if (!this.state.subscribed) {\r\n            this.setState({on: 'secondary', text: 'Отписаться', subscribed: true})\r\n            ApiConnector.addSubscriber(this.props.user_id, this.props.friend_id).then();\r\n        } else {\r\n            this.setState({on: 'primary', text: 'Подписаться', subscribed: false})\r\n            ApiConnector.removeSubscriber(this.props.user_id, this.props.friend_id).then();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n                <Div >\r\n                    <Button mode={this.state.on} onClick={this.subscribeToggle}>{this.state.text}</Button>\r\n                </Div>\r\n        )\r\n    }\r\n}\r\nexport default SubscribeButton","import React from 'react';\r\nimport {Group, Header, Avatar, Spinner} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport SubscribeButton from \"./SubscribeButton\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\r\nimport ApiConnector from \"../services/apiConnector\";\r\nimport Constants from \"../constants\";\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\";\r\n\r\nclass Friends extends React.Component {\r\n    searchChange = (e) => {\r\n        this.setState({\r\n            search: e.target.value\r\n        });\r\n    };\r\n\r\n    get friends() {\r\n        const search = this.state.search.toUpperCase();\r\n        return this.state.search !== ''\r\n            ? this.state.friends.filter((friend) => friend.first_name.toUpperCase().indexOf(search) > -1\r\n            || friend.last_name.toUpperCase().indexOf(search) > -1)\r\n            : this.state.friends;\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n          friends: null,\r\n          user_id: null,\r\n          subscribers: null,\r\n          search: '',\r\n        };\r\n        bridge.send(\"VKWebAppGetUserInfo\", {}).then((user_data) => {\r\n            ApiConnector.getSubscribers(user_data.id).then((response) => {\r\n                response.json().then((api) => {\r\n                    bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": Constants.VK_APP_ID, \"scope\": \"friends\"})\r\n                        .then(data => {\r\n                            this.getFriends(data.access_token).then(data => {\r\n                                this.setState({\r\n                                    user_id: user_data.id,\r\n                                    subscribers: api.subs,\r\n                                    friends: data.response.items\r\n                                });\r\n                            });\r\n                        });\r\n                });\r\n            }, (reject) => {\r\n                console.log(reject)\r\n            });\r\n        })\r\n    }\r\n\r\n    getFriends = async (access_token) => {\r\n        return await bridge\r\n            .send('VKWebAppCallAPIMethod',\r\n                {method: \"friends.get\", request_id: \"32test\",\r\n                    params: {\r\n                        fields: \"id, photo_50\",\r\n                        order: \"name\",\r\n                        access_token: access_token,\r\n                        v: Constants.VK_API_VERSION,\r\n                    }\r\n                });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Group>\r\n                <Header mode=\"secondary\" popout={this.state.popout}>Список друзей</Header>\r\n                <Search value={this.state.search} onChange={this.searchChange} after={null}/>\r\n                {this.state.friends ? this.friends.map((friend) => {\r\n                    return <SimpleCell\r\n                        key={friend.id}\r\n                        before={<Avatar size={48} src={friend.photo_50}/>}\r\n                        after={<SubscribeButton\r\n                            user_id={this.state.user_id}\r\n                            friend_id={friend.id}\r\n                            subscribed={this.state.subscribers ? this.state.subscribers.includes(friend.id) : false}\r\n                        />}\r\n                        description={friend.id}\r\n                    >{friend.first_name + ' ' + friend.last_name}</SimpleCell>\r\n                }) : <Spinner size=\"regular\" style={{ marginTop: 20 }}/> }\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default Friends\r\n","import React from 'react';\r\nimport {Div, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nclass GeoButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n                <Div style={{textAlign: 'center', marginTop: '3%'}}>\r\n                    <Button mode=\"commerce\" size='xl' onClick={this.props.onClick}>Поделиться геопозицией</Button>\r\n                </Div>\r\n        )\r\n    }\r\n}\r\nexport default GeoButton","import React from 'react';\r\n\r\nconst divStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    width: '15px',\r\n    height: '15px',\r\n    backgroundColor: '#0cb',\r\n    border: '2px solid #fff',\r\n    borderRadius: '40%',\r\n    userSelect: 'none',\r\n    transform: 'translate(-50%, -50%)'\r\n}\r\nconst nameStyle = {\r\n    width: '500px',\r\n    transform: 'translate(-7%, 0)',\r\n    fontSize: '12pt'\r\n}\r\nconst dateStyle = {\r\n    width: '500px',\r\n    transform: 'translate(-7%, -15px)',\r\n    fontSize: '9pt'\r\n}\r\n\r\nclass Marker extends React.Component {\r\n    render() {\r\n        return  <div style={divStyle}>\r\n                    <p style={nameStyle}>{this.props.name}</p>\r\n                    <p style={dateStyle}>{this.props.date}</p>\r\n                </div>\r\n    }\r\n}\r\nexport default Marker;","import {Group, ScreenSpinner} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport React from 'react';\r\nimport GeoButton from \"./GeoButton\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from '../panels/Marker'\r\nimport ApiConnector from \"../services/apiConnector\";\r\nimport Constants from \"../constants\";\r\n\r\nclass Gmap extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            geoLocation: null,\r\n            subscribers: null,\r\n            user_id: null,\r\n        }\r\n        this.getGeoDataFromServer();\r\n    }\r\n\r\n    static defaultProps = {\r\n        center:{\r\n            lat:30,\r\n            lng:30\r\n        },\r\n        zoom: 7\r\n    };\r\n\r\n    getGeo = async () =>  {\r\n        return await bridge.send('VKWebAppGetGeodata');\r\n    }\r\n\r\n    sendGeoToServer = async () => {\r\n        await this.getGeo().then(data => {\r\n            ApiConnector.addUserLocation(this.state.user_id, data.lat, data.long);\r\n            this.setState({\r\n                geoLocation: {\r\n                    lat: data.lat,\r\n                    lng: data.long,\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getGeoDataFromServer = async () => {\r\n        let subscribers = []\r\n        await bridge.send('VKWebAppGetUserInfo')\r\n            .then(userInfo => {\r\n                this.setState({ user_id: userInfo.id });\r\n                ApiConnector.getSubscribers(userInfo.id).then((response) => {\r\n                    response.json().then((data) => {\r\n                        bridge.send('VKWebAppGetAuthToken', {\"app_id\": Constants.VK_APP_ID, \"scope\": \"users\"}).then(response => {\r\n                            bridge.send('VKWebAppCallAPIMethod', {\r\n                                method: \"users.get\",\r\n                                request_id: \"64test\",\r\n                                params: {\r\n                                    user_ids: data.subs.toString(),\r\n                                    fields: \"first_name, last_name\",\r\n                                    v: Constants.VK_API_VERSION,\r\n                                    access_token: response.access_token,\r\n                                }\r\n                            }).then((data) => {\r\n                                data.response.forEach(user => {\r\n                                    ApiConnector.getUserLocation(user.id).then((response) => {\r\n                                        response.json().then((location) => {\r\n                                            if (location.date !== \"\") {\r\n                                                const userLocation = {\r\n                                                    id: location.id,\r\n                                                    name: user.first_name + ' ' + user.last_name,\r\n                                                    date: location.date,\r\n                                                    lat: location.lat,\r\n                                                    lng: location.lng,\r\n                                                }\r\n                                                subscribers.push(userLocation)\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                });\r\n                                this.setState({\r\n                                    subscribers: subscribers\r\n                                });\r\n                            })\r\n                        })\r\n                    })\r\n                });\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (this.state.subscribers)\r\n        ? (\r\n            <Group style={{\r\n                height: '65vh', width: '95%',\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\"\r\n            }}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: 'AIzaSyCA-CWX9xnTnxGmzIxkH_WIsGUrdeRI444' }}\r\n                center={this.state.geoLocation ? this.state.geoLocation : this.props.center}\r\n                zoom={this.props.zoom}>\r\n                {this.state.geoLocation ? <Marker lat={this.state.geoLocation.lat} lng={this.state.geoLocation.lng} name={'Вы'} date={new Date().toISOString().split(\"T\")[0]}/>:''}\r\n                {this.state.subscribers.map((friend) => {\r\n                    return <Marker key={friend.id} lat={friend.lat} lng={friend.lng} name={friend.name} date={friend.date}/>})}\r\n            </GoogleMapReact>\r\n            <GeoButton onClick={this.sendGeoToServer}/>\r\n            </Group>\r\n        )\r\n        : (<ScreenSpinner size=\"large\" />)\r\n    }\r\n}\r\nexport default Gmap","import React from 'react';\r\nimport {Epic, Panel, PanelHeader, Tabbar, TabbarItem, View} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28PlayRectangleStackOutline from '@vkontakte/icons/dist/28/play_rectangle_stack_outline';\r\nimport Icon28LocationOutline from '@vkontakte/icons/dist/28/location_outline';\r\nimport Friends from \"./Friends\";\r\nimport Gmap from \"./Gmap\";\r\n\r\nclass Main extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeStory: 'Subs',\r\n        };\r\n\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Subs'}\r\n                        data-story=\"Subs\"\r\n                        text=\"Подписки\"\r\n                    ><Icon28PlayRectangleStackOutline fill='#FF7F50' /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Geo'}\r\n                        data-story=\"Geo\"\r\n                        text=\"Геолокация\"\r\n                    ><Icon28LocationOutline fill='#228B22'/></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"Subs\" activePanel=\"Subs\">\r\n                    <Panel id=\"Subs\">\r\n                        <PanelHeader separator={false}>Подписки</PanelHeader>\r\n                            <Friends/>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"Geo\" activePanel=\"Geo\" >\r\n                    <Panel id=\"Geo\">\r\n                        <PanelHeader separator={false}>Геолокация</PanelHeader>\r\n                            <Gmap />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\nexport default Main","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport Main from \"./views/Main\"\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\").then();\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}