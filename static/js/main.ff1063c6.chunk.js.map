{"version":3,"sources":["constants.js","views/SubscribeButton.js","views/Friends.js","views/GeoButton.js","panels/Marker.js","views/Gmap.js","views/Main.js","index.js"],"names":["Constants","SERVER_API_ADDRESS","SubscribeButton","props","subscribeToggle","state","subscribed","setState","on","text","fetch","mode","method","body","id","user_id","subscriber","friend_id","then","this","onClick","React","Component","Friends","getFriends","a","bridge","send","request_id","params","fields","order","access_token","v","data","friends","response","items","console","log","catch","error","subscribers","headers","json","map","friend","before","size","src","photo_50","after","includes","description","first_name","last_name","toString","GeoButton","style","textAlign","marginTop","divStyle","position","top","left","width","height","backgroundColor","border","borderRadius","userSelect","transform","pStyle","fontSize","Marker","name","Gmap","getGeo","geoLocation","lat","lng","long","FriendsCoordinates","marginLeft","marginRight","bootstrapURLKeys","key","center","zoom","Friend","defaultProps","Main","activeStory","onStoryChange","bind","e","currentTarget","dataset","story","tabbar","selected","data-story","fill","activePanel","separator","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff1063c6.chunk.js","sourcesContent":["export default class Constants {\r\n    static SERVER_API_ADDRESS = \"https://bc51e15b5e75.ngrok.io/\";\r\n}\r\n","import React from 'react';\r\nimport {Div, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Constants from \"../constants\";\r\n\r\nclass SubscribeButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = this.props.subscribed\r\n            ? {on: 'secondary', text: \"Отписаться\", subscribed: true}\r\n            : {on: 'primary', text: \"Подписаться\", subscribed: false};\r\n    }\r\n\r\n    subscribeToggle = () => {\r\n        if (!this.state.subscribed) {\r\n            this.setState({on: 'secondary', text: 'Отписаться', subscribed: true})\r\n            fetch(Constants.SERVER_API_ADDRESS + \"user/add\", {\r\n                mode: \"cors\",\r\n                method: \"POST\",\r\n                body: {\r\n                    id: this.props.user_id,\r\n                    subscriber: this.props.friend_id,\r\n                }\r\n            }).then();\r\n        } else {\r\n            this.setState({on: 'primary', text: 'Подписаться', subscribed: false})\r\n            fetch(Constants.SERVER_API_ADDRESS + \"user/remove\", {\r\n                mode: \"cors\",\r\n                method: \"DELETE\",\r\n                body: {\r\n                    id: this.props.user_id,\r\n                    subscriber: this.props.friend_id,\r\n                }\r\n            }).then();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n                <Div >\r\n                    <Button mode={this.state.on} onClick={this.subscribeToggle}>{this.state.text}</Button>\r\n                </Div>\r\n        )\r\n    }\r\n}\r\nexport default SubscribeButton","import React from 'react';\r\nimport {Group, Header, Avatar} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport SubscribeButton from \"./SubscribeButton\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\r\nimport Constants from \"../constants\";\r\n\r\nclass Friends extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n          access_token: null,\r\n          friends: null,\r\n          user_id: null,\r\n          subscribers: null,\r\n        };\r\n        bridge.send(\"VKWebAppGetUserInfo\", {}).then((data) => {\r\n            this.setState({\r\n                user_id: data.id\r\n            });\r\n        })\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7550756, \"scope\": \"friends\"})\r\n            .then(data => {\r\n                this.setState({\r\n                    access_token: data.access_token\r\n                })\r\n                this.getFriends()\r\n                fetch(Constants.SERVER_API_ADDRESS + \"user/\" + this.state.user_id, {\r\n                    mode: \"cors\",\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                }).then((response) => {\r\n                    response.json().then((data) => {\r\n                        this.setState({\r\n                            subscribers: data\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    getFriends = async () => {\r\n        await bridge\r\n            .send('VKWebAppCallAPIMethod', {method: \"friends.get\", request_id: \"32test\", params: {\r\n                    fields: \"id, photo_50\", order: \"name\", access_token: this.state.access_token,\r\n                    v: \"5.122\",\r\n                }})\r\n            .then(data => {\r\n                this.setState({\r\n                    friends: data.response.items\r\n                });\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                // Handling an error\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Group>\r\n                <Header mode=\"secondary\">Список друзей</Header>\r\n                {this.state.friends ? this.state.friends.map((friend) => {\r\n                    return <SimpleCell before={<Avatar size={48} src={friend.photo_50}/>} after={<SubscribeButton user_id={this.state.user_id} friend_id={friend.id} subscribed={ this.state.subscribers ? this.state.subscribers.includes(friend.id) : false } />} description={friend.id}>{friend.first_name + ' ' + friend.last_name + this.state.subscribers ? this.state.subscribers.includes(friend.id).toString() : \"false\"}</SimpleCell>\r\n                }) : <SimpleCell>Loading</SimpleCell>}\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default Friends","import React from 'react';\r\nimport {Div, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nclass GeoButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n    render () {\r\n        return (\r\n                <Div style={{textAlign: 'center', marginTop: '3%'}}>\r\n                    <Button mode=\"commerce\" size='xl' onClick={this.props.onClick}>Поделиться геопозицией</Button>\r\n                </Div>\r\n        )\r\n    }\r\n}\r\nexport default GeoButton","import React from 'react';\r\n\r\nconst divStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    width: '15px',\r\n    height: '15px',\r\n    backgroundColor: '#0cb',\r\n    border: '2px solid #fff',\r\n    borderRadius: '40%',\r\n    userSelect: 'none',\r\n    transform: 'translate(-50%, -50%)'\r\n}\r\nconst pStyle = {\r\n    width: '500px',\r\n    transform: 'translate(-10%, 0)',\r\n    fontSize: '15pt'\r\n}\r\n\r\nclass Marker extends React.Component {\r\n    render() {\r\n        return <div style={divStyle}><p style={pStyle} >{this.props.name}</p></div>\r\n    }\r\n}\r\nexport default Marker;","import {Group} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport React from 'react';\r\nimport GeoButton from \"./GeoButton\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from '../panels/Marker'\r\n\r\nclass Gmap extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {geoLocation: null}\r\n    }\r\n    static defaultProps = {\r\n        center:{\r\n            lat:30,\r\n            lng:30\r\n        },\r\n        zoom: 11\r\n    };\r\n    FriendsCoordinates\r\n\r\n    getGeo = async () =>  {\r\n        await bridge.send('VKWebAppGetGeodata')\r\n        .then(data => {\r\n            this.setState({\r\n                geoLocation: {\r\n                    lat:data.lat,\r\n                    lng:data.long,\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    render () {\r\n        if (this.state.geoLocation)\r\n            this.FriendsCoordinates = [\r\n                {name: 'Michael Porotkin', lat: this.state.geoLocation.lat-1 , lng: this.state.geoLocation.lng},\r\n                {name: 'Some One', lat: this.state.geoLocation.lat, lng: this.state.geoLocation.lng+1}\r\n        ];\r\n        return (\r\n            <Group style={{\r\n                height: '65vh', width: '95%',\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\"\r\n            }}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: 'AIzaSyCA-CWX9xnTnxGmzIxkH_WIsGUrdeRI444' }}\r\n                center={this.state.geoLocation ? this.state.geoLocation : this.props.center}\r\n                zoom={this.props.zoom}\r\n            >\r\n                {this.state.geoLocation ? <Marker lat={this.state.geoLocation.lat} lng={this.state.geoLocation.lng} name={'Artem Buslaev'}/>:''}\r\n                {this.FriendsCoordinates ? this.FriendsCoordinates.map((Friend) => {\r\n                    return <Marker lat={Friend.lat} lng={Friend.lng} name={Friend.name}/>}):''}\r\n            </GoogleMapReact>\r\n            <GeoButton onClick={this.getGeo}/>\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default Gmap","import React from 'react';\r\nimport {Epic, Panel, PanelHeader, Tabbar, TabbarItem, View} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28PlayRectangleStackOutline from '@vkontakte/icons/dist/28/play_rectangle_stack_outline';\r\nimport Icon28LocationOutline from '@vkontakte/icons/dist/28/location_outline';\r\nimport Friends from \"./Friends\";\r\nimport Gmap from \"./Gmap\";\r\n\r\nclass Main extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeStory: 'Subs',\r\n            friends: null,\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Subs'}\r\n                        data-story=\"Subs\"\r\n                        text=\"Подписки\"\r\n                    ><Icon28PlayRectangleStackOutline fill='#FF7F50' /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Geo'}\r\n                        data-story=\"Geo\"\r\n                        text=\"Геолокация\"\r\n                    ><Icon28LocationOutline fill='#228B22'/></TabbarItem>\r\n\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"Subs\" activePanel=\"Subs\">\r\n                    <Panel id=\"Subs\">\r\n                        <PanelHeader separator={false}>Подписки</PanelHeader>\r\n                            <Friends/>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"Geo\" activePanel=\"Geo\" >\r\n                    <Panel id=\"Geo\">\r\n                        <PanelHeader separator={false}>Геолокация</PanelHeader>\r\n                        <Gmap />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\nexport default Main","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport Main from \"./views/Main\"\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\").then();\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}