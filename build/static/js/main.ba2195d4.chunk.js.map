{"version":3,"sources":["views/SubscribeButton.js","views/Friends.js","views/Main.js","index.js"],"names":["SubscribeButton","props","subscribeToggle","state","subscribed","setState","on","text","mode","this","onClick","React","Component","Friends","getFriends","a","bridge","send","method","request_id","params","fields","order","access_token","then","data","friends","response","items","console","log","catch","error","map","friend","before","size","src","photo_50","after","description","id","first_name","last_name","Main","activeStory","onStoryChange","bind","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","story","tabbar","selected","data-story","fill","activePanel","separator","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ba2195d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Div, Group, Button} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nclass SubscribeButton extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = this.props.subscribed ? {on: 'secondary', text: \"Отписаться\", subscribed: true} : {on: 'primary', text: \"Подписаться\", subscribed: false};\r\n    }\r\n\r\n    subscribeToggle = () => {\r\n        if (!this.state.subscribed) {\r\n            this.setState({on: 'secondary', text: 'Отписаться', subscribed: true})\r\n        } else {\r\n            this.setState({on: 'primary', text: 'Подписаться', subscribed: false})\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Group>\r\n                <Div>\r\n                    <Button mode={this.state.on} onClick={this.subscribeToggle}>{this.state.text}</Button>\r\n                </Div>\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default SubscribeButton","import React from 'react';\r\nimport {Group, Header, Avatar} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport SubscribeButton from \"./SubscribeButton\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\r\n\r\nclass Friends extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n          access_token: null,\r\n          friends: null\r\n        };\r\n        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7550756, \"scope\": \"friends\"})\r\n            .then(data => {\r\n                this.setState({\r\n                    access_token: data.access_token\r\n                })\r\n                this.getFriends()\r\n            });\r\n    }\r\n\r\n    getFriends = async () => {\r\n        await bridge\r\n            .send('VKWebAppCallAPIMethod', {method: \"friends.get\", request_id: \"32test\", params: {\r\n                    fields: \"id, photo_50\", order: \"name\", access_token: this.state.access_token\r\n                }})\r\n            .then(data => {\r\n                this.setState({\r\n                    friends: data.response.items\r\n                });\r\n                console.log(data)\r\n            })\r\n            .catch(error => {\r\n                // Handling an error\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Group>\r\n                <Header mode=\"secondary\">Список друзей</Header>\r\n                {this.state.friends ? this.state.friends.map((friend) => {\r\n                    return <SimpleCell before={<Avatar size={48} src={friend.photo_50}/>} after={<SubscribeButton subscribed={false}/>} description={friend.id}>{friend.first_name + ' ' + friend.last_name}</SimpleCell>\r\n                }) : <SimpleCell>Loading</SimpleCell>}\r\n            </Group>\r\n        )\r\n    }\r\n}\r\nexport default Friends","import React from 'react';\r\nimport {Epic, Panel, PanelHeader, Tabbar, TabbarItem, View} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28PlayRectangleStackOutline from '@vkontakte/icons/dist/28/play_rectangle_stack_outline';\r\nimport Icon28LocationOutline from '@vkontakte/icons/dist/28/location_outline';\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\r\nimport Friends from \"./Friends\";\r\n\r\nclass Main extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeStory: 'Subs',\r\n            friends: null,\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        bridge.subscribe(({ detail: { type, data }}) => {\r\n            if (type === 'VKWebAppUpdateConfig') {\r\n                const schemeAttribute = document.createAttribute('scheme');\r\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n                document.body.attributes.setNamedItem(schemeAttribute);\r\n            }\r\n        });\r\n        async function fetchData() {\r\n            return await bridge.send('VKWebAppGetUserInfo');\r\n        }\r\n        fetchData();\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Subs'}\r\n                        data-story=\"Subs\"\r\n                        text=\"Подписки\"\r\n                    ><Icon28PlayRectangleStackOutline fill='#FF7F50' /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'Geo'}\r\n                        data-story=\"Geo\"\r\n                        text=\"Геолокация\"\r\n                    ><Icon28LocationOutline fill='#228B22'/></TabbarItem>\r\n\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"Subs\" activePanel=\"Subs\">\r\n                    <Panel id=\"Subs\">\r\n                        <PanelHeader separator={false}>Подписки</PanelHeader>\r\n                        <Group>\r\n                            <Friends/>\r\n                        </Group>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"Geo\" activePanel=\"Geo\">\r\n                    <Panel id=\"Geo\">\r\n                        <PanelHeader separator={false}>Геолокация</PanelHeader>\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\nexport default Main","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport Main from \"./views/Main\"\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\").then();\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}